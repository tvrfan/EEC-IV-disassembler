5.0.8

Fixed - New logic for symbols (5.0.7) causes incorrect symbol to be displayed in many places.
Fixed - in comments, a bit field followed by a non bit field, e.g. "\sA7:2 = 0 \t83\s247e"  may cause spurious bit to appear in second name as "B0_name"
Fixed - Infinite loop (lock up) with KIEE binary, and probably others, due to error with merging internal commands together. 
Fixed - args sometimes 'overrun' into next opcode in printout.  

Change - Symbol rules -  Symbol fields may now overlap, but may not be identical. User can specify byte/word/bitfield at same address.
         If an exact match is not found in searches, the nearest 'whole byte' sym name (i.e. which spans the field specified) is used as default name. (for DMR files)

Outstanding bugs - all can be fixed/workaround with extra user commands (in .dir file), maybe in combination with v4 versions.

NOTE - I have discovered a serious design issue which can cause lost tables and functions, and may also result in incorrect rows and columns for these data structures. Also missed args for subroutines. This is caused by my grand rewrite and change to the way a bin file is scanned.  I tried to do a 'scan once' elegant model, and now after all this effort, several bugs confirm that this 'elegant' design isn't going to work as well as I thought. I need to go back again and look at how to fix this, perhaps putting back some earlier methods.  V4 was actually better at finding some things, but did not have the 'calc' and 'nested subfield' ability.  This may take a while to fix.

1.  tables sometimes appear as 1 column, which is obviously wrong 
2.  more tables and functions missed than version 4.
3.  Missed args on some subroutine calls.
4.  Missed code (more than v4 anyway) 
 




5.0.7

Fixed - Crash in calc when used in short format multiple times in same command (intermittent) (e.g. [UW =float(x/4.0)] [UW=float(x/8.0)]
Fixed - "invalid floating point number" error, also in short format. 
Fixed - Float format not always carried through to print phase in listing (prints hex format)
Fixed - incorrect address format in some error reports
Fixed - printout of calc formulae in '_msg' file uses float values in 'integer' calc types.
Fixed - IN PART  change to process to find missing subroutine args.  Not a perfect fix, but an improvement. 


Change - changed some internal names to match the Ford Manual. i.e.  "alt" and "PSW_" 
Change - Allow byte symbols to overlap word symbols.  Ford DMR files do this, so SAD rules and checks changed to fit.


--------------------------------

5.0.6

Fixed - crash in handling of calc types with "= float" due to incorrect size/pointer (in funcs and tables mainly)
Fixed - "] expected" and "Invalid Address" and other errors if command has following spaces (and/or comments) 
Fixed - "At least 2 values Required" error for special lookup types.
Fixed - parsing of 'calc' commands reports error when no space after a bracket. 
Fixed - Incorrect wrap of comments (carry over from v4)
Fixed - repair style for AN3B, AN3W to V4 style  of  "R32 = name | name | name"
Fixed - incorrect print format for SYM command in _msg file.


Change - add "with <command>" for duplicates and overlaps in dir file.

--------------------------------

5.0.5

Fixed - symbol names can be trashed by symbol name reference in assocaated comment
Fixed - 'special' subroutine names (e.g. function lookup) get replaced/changed when they should not.
Fixed - Mistake - the crash fix in 5.0.4 was NOT put in Windows versions. 

Change - add extra line for 'normalize' opcode to reflect what really happens (like the divide in 5.0.4)



--------------------------------

5.0.4

Fixed - additonal psuedo code appears after a 'return'
Fixed - blank psuedo code for OR, XOR, AND  when no symbol names found. (see note below)
Fixed - system subroutine names (e.g. interrupt handlers) being overwritten.
Fixed - incorrect parsing of math functions with no space after close brackets (? May need more) 

Fixed - (MAYBE!) crash in some bins due to a zero pointer - haven't fully analysed why, but put in temp check which seems to work.

Change - add remainder line for divides in form of Rx = Rz % Rb;   This reminds that top of dividend register is changed to remainder value.


Note  -  AND, OR, XOR - the field name print logic still differs a little from version 4, because multibit subfields are now supported.
         Rules - If a field name is found, all found symnames for the instruction are used.  This is now applied to ldw, ldb, clrw, clrb etc, which is different to v4. 
         If no field symnames found, then style of Bx_Rn or Bx_symname (if the byte or word has a symname) is used for any remaining bits.  
         If no field symnames found and only ONE BIT is changed, then style of Bx_Rn or Bx_symname (if the byte or word has a symname) is used. (This from v4)
         may need extra global option(s) to fine tune what users want.

-------------------------(delete 5.0.1 through 5.0.3) -------- 

5.0.3

NB. still some issues outstanding from 5.0.2, but releasing this as several things fixed. 

Fixed - incorrect logic for conditional jump JNC/JC printed. (other jumps checked too).
Fixed - incorrect bank printed after ROMBANK prefix.
Fixed - XOR not printing correct operator (^= instead of =) 
Fixed - functions not being extended to their true endpoint.
Fixed - '= calcname' returns "invalid calctype"
Fixed - columns not lining up for some structs
Fixed - args overlapping in printouts.
Fixed - "commands overlap" error reported for adjacent commands 


Change - put 'timer' command back, as it looks like this will be best solution, with a 'type' attached (maybe with a size too).
Change - change printout of JNV/JV (overflow flag) to 'if OVF = " as previous format doesn't appear to be correct. More work to do.
 
-------------------------

5.0.2. ALPHA

Fixed -  Drag and drop and 'open with' in Windows causes crash and/or 'file not found'. (incorrect file path handling)
Fixed -  Duplicate symbol error in commands when sym is write 'W', if W option appears before 'B' option 
Fixed -  'rowsize is zero' error - appearing when it should not
Fixed -  '2 values required' with 'F <functype> special subroutine type - only tables require 2 values.
Fixed -  Incorrect checking of number of data items (i.e. number of '[]' items) in commands.

-------------------------

5.0.1 ALPHA

for user evaluation.

Change - Large parts of SAD rewritten.
Change - New command syntax.
NEW    - Supports true multibit fields. Fields can be nested within each other
NEW    - Supports a 'calc' command for true math calculations.
NEW    - Added autodetect of word tables.
 
-------------------------------------------------------------  

4.0.12

1. Revise address validation (again !!)  For all address inputs in .dir and .cmt files). 
   Final rules are - 
   All addresses are read as up to 5 hex digits, 0xfffff. The first digit is bank. Valid banks are 0,1,8,9 for all bins.
   Registers are 0x0 to 0x3ff (0x0 to 0xff for 8061) Registers cannot have a bank.  Leading zeroes are ignored for compatibility.
   
   Single banks (all 8061, some 8065) No bank required (i.e. 4 digits). Addresses may have a bank 8 attached, which is not displayed. 
   Multibanks.  
   0x400 to 0x1fff allowed, and defaults to Bank 1 (= data bank in every bin .... so far)
   0x2000 to 0xffff MUST have a bank attached.

2. Fixed - Incorrect print layout for 'split comments' ('|' character) and bit names with AND and OR opcodes.
3. Fixed - Comments showing write symbol names ('\S') when they should be read names.
4. Add   - Word tables in .dir commands.     (not detected automatically yet, due soon)

-------------------------------------------------------------  



Note 4.0.7.16  version moved to stable

NOTE - After a HUGE gap, during which I was trying to write a new much neater, much more elegant version (which I can't get to work !)
I decide to go back to the last working version and start over. 
 
Changed to simpler version numbering.

From here I will probably merge in many of those new versions from this attempt.

-------------------------------------------------------------



4.0.11 (10 mar 23)

1. Revert change to 'skip' opcode, which seems to cause several issues

2. change address validation to match other common tools (I hope)

-------------------------------------------------------------

NB.  4.0.10 removed due to another stupid error in address validation

-------------------------------------------------------------


4.0.9

1. Fix regression errors causing symbol names not to be matched correctly in various places in code printout (my error from changes in 4.08)

2. Fix inconsistent spaces in comments after symbol addresses (\S syntax)  

3. Turn off 'gap detect' again as it causes some strange behaviour and user commands to be ignored.



-------------------------------------------------------------

4.0.8  (01 Mar 2023)

Fixed - Inconsistent handling of addresses (bank prefixes) in multibanks across symbols, comments, commands.

NB. I expect probable regression errors as I have changed the whole address verification to use the same routine...

OOPS! I also left on the 'gap detect' from v 4.06 which does work for functions but not so well for tables, and it does produce some
false matches.

-------------------------------------------------------------

Note 4.0.7.16  version moved to stable as 4.0.7 


(dropped older version descriptions)



-------------------------------------------------------------


















4.07.16 (11 April 2022)
Changed - Add special function command "uwtlu" for unsigned word tables
Changed - Add special function command "swtlu" for signed word tables
